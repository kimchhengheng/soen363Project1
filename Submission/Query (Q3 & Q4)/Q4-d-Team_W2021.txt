--D
-- USING MATERIALIZED VIEWS
-- THE EXECUTION TIME WENT FROM 0.237 SECONDS TO 0.025 SECONDS WITH MATERIALIZED VIEWS.
-- THIS IS A SMALLER BUT STILL A SIGNIFICANT IMPROVEMENT.

-- SMITH MOVIE STATS VIEW
CREATE MATERIALIZED VIEW MATERIALIZED_SMITH_MOVIE_STAT AS
SELECT COUNT(DISTINCT A.NAME) AS CA, COUNT(DISTINCT T.TID) AS CT, COUNT(DISTINCT G.GENRE) AS CG, M.YEAR AS YEAR, M.RATING AS RATING   
FROM ACTORS A, MOVIES M, TAGS T, GENRES G
WHERE M.TITLE = 'Mr. \& Mrs. Smith' AND A.MID = M.MID AND T.MID = M.MID AND G.MID = M.MID
GROUP BY YEAR, RATING;

-- VIEWS FOR CALCULATING FRACTION OF COMMON ACTORS
CREATE MATERIALIZED VIEW MATERIALIZED_NUM_COMMON_ACTORS AS
SELECT M2.MID, COUNT(DISTINCT A1.NAME) AS NCA
FROM MOVIES M1, MOVIES M2, ACTORS A1, ACTORS A2
WHERE M1.TITLE = 'Mr. \& Mrs. Smith' AND M2.TITLE <> 'Mr. \& Mrs. Smith' AND A1.NAME = A2.NAME AND A1.MID = M1.MID AND A2.MID = M2.MID
GROUP BY M2.MID;

CREATE MATERIALIZED VIEW MATERIALIZED_NOT_COMMON_MOVIES_ACTORS AS
SELECT M.MID, 0 AS NCA
FROM MOVIES M
WHERE M.TITLE <> 'Mr. \& Mrs. Smith' AND M.MID NOT IN (SELECT M1.MID FROM MATERIALIZED_NUM_COMMON_ACTORS M1);

CREATE MATERIALIZED VIEW MATERIALIZED_ALL_NCA AS
SELECT * FROM MATERIALIZED_NUM_COMMON_ACTORS
UNION
SELECT * FROM MATERIALIZED_NOT_COMMON_MOVIES_ACTORS;

-- VIEWS FOR CALCULATING FRACTION OF COMMON TAGS
CREATE MATERIALIZED VIEW MATERIALIZED_NUM_COMMON_TAGS AS
SELECT M2.MID, COUNT(DISTINCT T1.TID) AS NCT
FROM MOVIES M1, MOVIES M2, TAGS T1, TAGS T2
WHERE M1.TITLE = 'Mr. \& Mrs. Smith' AND M2.TITLE <> 'Mr. \& Mrs. Smith' AND T1.TID = T2.TID AND T1.MID = M1.MID AND T2.MID = M2.MID
GROUP BY M2.MID;

CREATE MATERIALIZED VIEW MATERIALIZED_NOT_COMMON_MOVIES_TAGS AS
SELECT M.MID, 0 AS NCT
FROM MOVIES M
WHERE M.TITLE <> 'Mr. \& Mrs. Smith' AND M.MID NOT IN (SELECT M1.MID FROM MATERIALIZED_NUM_COMMON_TAGS M1);

CREATE MATERIALIZED VIEW MATERIALIZED_ALL_NCT AS
SELECT * FROM MATERIALIZED_NUM_COMMON_TAGS
UNION
SELECT * FROM MATERIALIZED_NOT_COMMON_MOVIES_TAGS;

-- VIEWS FOR CALCULATING FRACTION OF COMMON GENRES
CREATE MATERIALIZED VIEW MATERIALIZED_NUM_COMMON_GENRES AS
SELECT M2.MID, COUNT(DISTINCT G2.GENRE) AS NCG
FROM MOVIES M1, MOVIES M2, GENRES G1, GENRES G2
WHERE M1.TITLE = 'Mr. \& Mrs. Smith' AND M2.TITLE <> 'Mr. \& Mrs. Smith' AND M1.MID <> M2.MID AND G1.GENRE = G2.GENRE AND G1.MID = M1.MID AND G2.MID = M2.MID
GROUP BY M2.MID;

CREATE MATERIALIZED VIEW MATERIALIZED_NOT_COMMON_MOVIES_GENRES AS
SELECT M.MID, 0 AS NCG
FROM MOVIES M
WHERE M.TITLE <> 'Mr. \& Mrs. Smith' AND M.MID NOT IN (SELECT M1.MID FROM MATERIALIZED_NUM_COMMON_GENRES M1);

CREATE MATERIALIZED VIEW MATERIALIZED_ALL_NCG AS
SELECT * FROM MATERIALIZED_NUM_COMMON_GENRES
UNION
SELECT * FROM MATERIALIZED_NOT_COMMON_MOVIES_GENRES;

-- CENTRALIZING ALL FRACTIONS DATA OF MOVIES
CREATE MATERIALIZED VIEW MATERIALIZED_FRACTION_TABLE AS
SELECT M.MID, (NCA.NCA/SMS.CA) AS FCA, (NCT.NCT/SMS.CT) AS FCT, (NCG.NCG/SMS.CG) AS FCG, (1-(ABS(M.YEAR-SMS.YEAR)/GREATEST(M.YEAR,SMS.YEAR))) AS AGE_GAP, (1-(ABS(M.RATING-SMS.RATING)/GREATEST(M.RATING,SMS.RATING))) AS RATING_GAP         
FROM MOVIES M, MATERIALIZED_ALL_NCA NCA, MATERIALIZED_ALL_NCT NCT, MATERIALIZED_ALL_NCG NCG, MATERIALIZED_SMITH_MOVIE_STAT SMS
WHERE M.TITLE <> 'Mr. \& Mrs. Smith' AND NCA.MID = M.MID AND NCT.MID = M.MID AND NCG.MID = M.MID AND M.RATING IS NOT NULL;

-- FINAL QUERY
SELECT * FROM (
SELECT DISTINCT M.TITLE, M.RATING, ((FT.FCA + FT.FCT + FT.FCG + FT.AGE_GAP + FT.RATING_GAP)*20) AS SIM_SCORE
FROM MOVIES M, MATERIALIZED_FRACTION_TABLE FT
WHERE M.MID = FT.MID
ORDER BY SIM_SCORE DESC)
WHERE ROWNUM <= 10;